<!--
doc/src/sgml/ref/create_event_trigger.sgml
PostgreSQL documentation
-->

<refentry id="sql-createeventtrigger">
 <indexterm zone="sql-createeventtrigger">
  <primary>CREATE EVENT TRIGGER</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE EVENT TRIGGER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE EVENT TRIGGER</refname>
  <refpurpose>새 이벤트 트리거 정의</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
CREATE EVENT TRIGGER <replaceable class="parameter">이름</replaceable>
    ON <replaceable class="parameter">이벤트</replaceable>
    [ WHEN <replaceable class="parameter">조건변수</replaceable> IN (조건값 [, ... ]) [ AND ... ] ]
    EXECUTE { FUNCTION | PROCEDURE } <replaceable class="parameter">함수이름</replaceable>()
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>설명</title>

  <para>
   <command>CREATE EVENT TRIGGER</command> 명령은 새 이벤트 트리거를 만든다.
   이 이벤트 트리거는
   지정한 이벤트가 있고, 그 트리거 <literal>WHEN</literal> 조건절에서
   지정한 조건에 맞으면, 지정한 트리거 함수가 실행 되도록 한다.
   이벤트 트리거에 대한 보다 자세한 설명은 <xref linkend="event-triggers"/>에서
   한다.  이벤트 트리거를 만드는 사용자가 그 트리거의 소유주가 된다.
  </para>
 </refsect1>

 <refsect1>
  <title>매개 변수</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">이름</replaceable></term>
    <listitem>
     <para>
      새 이벤트 트리거 이름.  이 이름은 접속한 데이터베이스 안에서 
      유일해야 한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">이벤트</replaceable></term>
    <listitem>
     <para>
      이벤트 트리거용 함수가 실행되는 그 이벤트 이름.
      이벤트 이름에 대한 자세한 설명은 <xref
      linkend="event-trigger-definition"/>에서 한다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">조건변수</replaceable></term>
    <listitem>
     <para>
      이벤트 가운데, 지정한 함수가 실행될 조건을 지정할 조건 변수 이름.
      이것은 지정한 이벤트 가운데서도 어느 특정 상황에서만 트리거 
      함수가 실행되도록 한다.  현재 사용할 수 있는
      <replaceable class="parameter">조건변수</replaceable>용
      이름은 <literal>TAG</literal> 뿐이다.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">조건값</replaceable></term>
    <listitem>
     <para>
      위 조건 변수에 지정할 변수 값이다.
      <literal>TAG</literal> 변수에 지정할 수 있는 값은
      SQL 명령이다(예, <literal>'DROP FUNCTION'</literal>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">함수이름</replaceable></term>
    <listitem>
     <para>
      해당 이벤트 발생시 작업할 함수 이름.
      이 함수는 입력 인자는 없고, 반환값은 <literal>event_trigger</literal>
      자료형인 함수여야 한다.
     </para>

     <para>
      <literal>CREATE EVENT TRIGGER</literal> 구문에서
      <literal>FUNCTION</literal>과 <literal>PROCEDURE</literal>는
      같은 의미다.  하지만, 여기서 지정할 수 있는 것은 
      프로시져가 아니라, 함수만 가능하다.  현재 구문은 하위 호환성 때문에 
      있으며, <literal>PROCEDURE</literal> 키워드는 사라질 예정이다.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-notes">
  <title>참고</title>

  <para>
   이벤트 트리거는 슈퍼유저만 만들 수 있다.
  </para>

  <para>
   이벤트 트리거는 단일 사용자 모드(<xref linkend="app-postgres"/>)에서는
   비활성화 된다.  어떤 오류가 있는 이벤트 트리거를 해당 데이터베이스에
   지정하면, 이 트리거를 지우지 못한는 상황이 발생할 수도 있다.
   이 때는 단일 사용자 모드로 재실행 해서 해당 이벤트 트리거를 지워야 한다. 
  </para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-examples">
  <title>예제</title>

  <para>
   모든 <link linkend="ddl">DDL</link> 작업 시 항상 무시하는 이벤트 트리거:

<programlisting>
CREATE OR REPLACE FUNCTION abort_any_command()
  RETURNS event_trigger
 LANGUAGE plpgsql
  AS $$
BEGIN
  RAISE EXCEPTION 'command % is disabled', tg_tag;
END;
$$;

CREATE EVENT TRIGGER abort_ddl ON ddl_command_start
   EXECUTE FUNCTION abort_any_command();
</programlisting></para>
 </refsect1>

 <refsect1 id="sql-createeventtrigger-compatibility">
  <title>호환성</title>

  <para>
   <command>CREATE EVENT TRIGGER</command> 구문은 표준 SQL 구문이 아니다.
  </para>

 </refsect1>

 <refsect1>
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altereventtrigger"/></member>
   <member><xref linkend="sql-dropeventtrigger"/></member>
   <member><xref linkend="sql-createfunction"/></member>
  </simplelist>
 </refsect1>
</refentry>
